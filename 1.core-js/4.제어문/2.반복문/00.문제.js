
//1.
//  let i = 3;

// while (i) {
//     alert ( i-- );
// }
//0이 아닌 정수는 true
//-400,-44도 true
//0은 false

// 2.
////let i = 0;
//while (++i < 5) alert ( i );

// 3.
// let i = 0;
// while (i++ < 5) alert ( i );

// 4.
// 사용자가 100보다 큰 숫자를 입력하도록 
// 안내하는 프롬프트 창을 띄워보세요.
// 사용자가 조건에 맞지 않은 값을 입력한 경우
// 반복문을 사용해 동일한 프롬프트 창을 띄워줍니다.

// 사용자가 100을 초과하는 숫자를 입력하거나 
// 취소 버튼을 누른 경우, 혹은 아무것도 입력하지 않고
// 확인 버튼을 누른 경우에는 더는 프롬프트 창을
// 띄워주지 않아도 됩니다.

// 사용자가 오직 숫자만 입력한다고 가정하고
// 답안을 작성하도록 해봅시다.
// 숫자가 아닌 값이 입력되는 예외 상황은 처리하지
// 않아도 됩니다.


//5.
// 소수 출력하기
// 소수는 자신보다 작은 두 개의 자연수를 곱하여
// 만들 수 없는 1보다 큰 자연수입니다.

// 다시 말해서 1과 그 수 자신 이외의 자연수로는
// 나눌 수 없는 자연수를 소수라고 부르죠

// 5는 2나 3, 4로 나눌 수 없기 때문에 소수입니다.
// 5를 이들 숫자로 나누면 나머지가 있기 때문이죠.

// 2부터 n까지의 숫자 중 소수만 출력해주는 코드를 
// 작성해봅시다.

// n = 10이라면 결과는 2,3,5,7이 되어야겠죠.

// 주의:작성한 코드는 임의의 숫자 n에
// 대해 동작해야 합니다.


// 방법1

function isPrime(num) {
    // 소수는 1과 자기 자신만으로만 나누어 떨어지는 수 임으로
    // num > i
    for(let i = 2; i < num; i++) {
    if(num % i === 0) { //이 부분에서 num이  다른 수로 나눠떨어진다면 소수가 아님
      return false;
     }
    }
   // 소수는 1보다 큰 정수임으로
   // 1보다 작으면 false를 리턴한다
   return num > 1;
  }

 var result = isPrime(-4);
 console.log(result);
